# yaml-language-server: $schema=https://raw.githubusercontent.com/kjellberg/mrsk/validate-with-json-schema/lib/mrsk/configuration/schema.yaml
service: learn-mrsk
image: luvs/learn-mrsk/test
servers:
  web:
    hosts:
      - 65.21.62.243
      - 135.181.83.48
    labels:
      traefik.http.routers.web.rule: Host(`mrsk.funtesting.dev`)
      traefik.http.routers.web_secure.entrypoints: websecure
      traefik.http.routers.web_secure.rule: Host(`mrsk.funtesting.dev`)
      traefik.http.routers.web_secure.tls: true
      traefik.http.routers.web_secure.tls.certresolver: letsencrypt
registry:
  server: ghcr.io
  username: luvs
  password:
    - GHCR_TOKEN
healthcheck:
  path: /api/health
# accessories:
#   redis:
#     image: redis:latest
#     host: 65.21.62.243
#     role:
#       - web
#     port: "172.17.0.1:6379:6379"
#     volumes:
#       - /var/lib/redis:/data
#     cmd: "--dir /data"
# env:
#   clear:
#     REDIS_URL: "redis://172.17.0.1:6379"
ssh:
  user: root
builder:
  multiarch: false
traefik:
  options:
    publish:
      # Do not add 80:80, as it added by default
      - "443:443"
    volume:
      - "/tmp/acme.json:/tmp/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    certificatesResolvers.letsencrypt.acme.email: "evgeny@luvsandugar.com"
    certificatesResolvers.letsencrypt.acme.storage: "/tmp/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web
  memory: 512m
